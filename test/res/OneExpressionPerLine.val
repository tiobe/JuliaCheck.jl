>> Processing file 'OneExpressionPerLine.jl'...

OneExpressionPerLine.jl(2, 0):
for bar::Int64 in range(1, 3); println("bar ", bar); if bar == 2 println("bar equals two"); end; end;
└───────────────────────────────────────────────────────────────────────────────────────────────────┘ ── Do not concatenate statements with a semicolon.
The number of expressions per line is limited to one.
Rule: one-expression-per-line. Severity: 7

OneExpressionPerLine.jl(7, 0):
    x = 4; x + 5
└──────────────┘ ── Do not concatenate statements with a semicolon.
The number of expressions per line is limited to one.
Rule: one-expression-per-line. Severity: 7

OneExpressionPerLine.jl(8, 0):
    y = 6; z = 11;
└────────────────┘ ── Do not concatenate statements with a semicolon.
The number of expressions per line is limited to one.
Rule: one-expression-per-line. Severity: 7

OneExpressionPerLine.jl(13, 0):
    push!(clumsy_setup, 1); push!(clumsy_setup, 2)
└────────────────────────────────────────────────┘ ── Do not concatenate statements with a semicolon.
The number of expressions per line is limited to one.
Rule: one-expression-per-line. Severity: 7

OneExpressionPerLine.jl(17, 0):
    x = 5; x + 5; x * 5;
└──────────────────────┘ ── Do not concatenate statements with a semicolon.
The number of expressions per line is limited to one.
Rule: one-expression-per-line. Severity: 7