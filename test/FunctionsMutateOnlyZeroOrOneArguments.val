
>> Processing file 'FunctionsMutateOnlyZeroOrOneArguments.jl'...

FunctionsMutateOnlyZeroOrOneArguments.jl(3, 1):
┌─────────────────────────────────────────────────────────────────────────────────────────────────
function reset_vectors!(vec1::Vector{T}, vec2::Vector{T})::Nothing where T <: Real  # bang omitted
    vec1 .= zero(T)
⋮
    return nothing
end
#─┘ ── Function mutates variable vec2 while it is not the first argument.
Functions should change only one or zero argument(s).
Rule: functions-mutate-only-zero-or-one-arguments. Severity: 3

FunctionsMutateOnlyZeroOrOneArguments.jl(9, 1):
┌─────────────────────────────────
function all_the_changes!(a, b, c)
    a[1] = 1
⋮
    c[3] = 3
end
#─┘ ── Function mutates variable b while it is not the first argument.
Functions should change only one or zero argument(s).
Rule: functions-mutate-only-zero-or-one-arguments. Severity: 3

FunctionsMutateOnlyZeroOrOneArguments.jl(9, 1):
┌─────────────────────────────────
function all_the_changes!(a, b, c)
    a[1] = 1
⋮
    c[3] = 3
end
#─┘ ── Function mutates variable c while it is not the first argument.
Functions should change only one or zero argument(s).
Rule: functions-mutate-only-zero-or-one-arguments. Severity: 3

FunctionsMutateOnlyZeroOrOneArguments.jl(15, 1):
┌───────────────────────────────────────────────────────────────
function keyword_arguments(; a::Vector{Int64}, b::Vector{Int64})
    a[1] = 1
    b[2] = 2
end
#─┘ ── Function mutates variable b while it is not the first argument.
Functions should change only one or zero argument(s).
Rule: functions-mutate-only-zero-or-one-arguments. Severity: 3